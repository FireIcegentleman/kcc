Typedef                  str: typedef                  loc: <builtin:1:1>
Struct                   str: struct                   loc: <builtin:1:9>
LeftBrace                str: {                        loc: <builtin:1:16>
Unsigned                 str: unsigned                 loc: <builtin:2:3>
Int                      str: int                      loc: <builtin:2:12>
Identifier               str: gp_offset                loc: <builtin:2:16>
Semicolon                str: ;                        loc: <builtin:2:25>
Unsigned                 str: unsigned                 loc: <builtin:3:3>
Int                      str: int                      loc: <builtin:3:12>
Identifier               str: fp_offset                loc: <builtin:3:16>
Semicolon                str: ;                        loc: <builtin:3:25>
Void                     str: void                     loc: <builtin:4:3>
Star                     str: *                        loc: <builtin:4:8>
Identifier               str: overflow_arg_area        loc: <builtin:4:9>
Semicolon                str: ;                        loc: <builtin:4:26>
Void                     str: void                     loc: <builtin:5:3>
Star                     str: *                        loc: <builtin:5:8>
Identifier               str: reg_save_area            loc: <builtin:5:9>
Semicolon                str: ;                        loc: <builtin:5:22>
RightBrace               str: }                        loc: <builtin:6:1>
Identifier               str: __va_elem                loc: <builtin:6:3>
Semicolon                str: ;                        loc: <builtin:6:12>
Typedef                  str: typedef                  loc: <builtin:7:1>
Identifier               str: __va_elem                loc: <builtin:7:9>
Identifier               str: __builtin_va_list        loc: <builtin:7:19>
LeftSquare               str: [                        loc: <builtin:7:36>
IntegerConstant          str: 1                        loc: <builtin:7:37>
RightSquare              str: ]                        loc: <builtin:7:38>
Semicolon                str: ;                        loc: <builtin:7:39>
Void                     str: void                     loc: <builtin:8:1>
Identifier               str: __builtin_va_start       loc: <builtin:8:6>
LeftParen                str: (                        loc: <builtin:8:24>
Identifier               str: __builtin_va_list        loc: <builtin:8:25>
Comma                    str: ,                        loc: <builtin:8:42>
Int                      str: int                      loc: <builtin:8:44>
RightParen               str: )                        loc: <builtin:8:47>
Semicolon                str: ;                        loc: <builtin:8:48>
Void                     str: void                     loc: <builtin:9:1>
Identifier               str: __builtin_va_end         loc: <builtin:9:6>
LeftParen                str: (                        loc: <builtin:9:22>
Identifier               str: __builtin_va_list        loc: <builtin:9:23>
RightParen               str: )                        loc: <builtin:9:40>
Semicolon                str: ;                        loc: <builtin:9:41>
Int                      str: int                      loc: <test.c:27:1>
Identifier               str: main                     loc: <test.c:27:5>
LeftParen                str: (                        loc: <test.c:27:9>
Void                     str: void                     loc: <test.c:27:10>
RightParen               str: )                        loc: <test.c:27:14>
LeftBrace                str: {                        loc: <test.c:27:16>
Int                      str: int                      loc: <test.c:27:18>
Identifier               str: a                        loc: <test.c:27:22>
LeftSquare               str: [                        loc: <test.c:27:23>
IntegerConstant          str: 5                        loc: <test.c:27:24>
RightSquare              str: ]                        loc: <test.c:27:25>
Equal                    str: =                        loc: <test.c:27:27>
LeftBrace                str: {                        loc: <test.c:27:29>
StringLiteral            str: L"fu"                    loc: <test.c:27:30>
RightBrace               str: }                        loc: <test.c:27:35>
Semicolon                str: ;                        loc: <test.c:27:36>
RightBrace               str: }                        loc: <test.c:27:38>
Eof                      str:                          loc: <test.c:28:1>
